cmake_minimum_required(VERSION 3.8)

project(QuantLibJava CXX)

# write the library here
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}")
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}")

# workaround for ninja which requires the file to exist before the build starts
#execute_process(
#  WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR}
#  COMMAND ${CMAKE_COMMAND} -E make_directory lib
#)

execute_process(
  WORKING_DIRECTORY ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}
  COMMAND ${CMAKE_COMMAND} -E touch QuantLibJava.jar
)

include(${ORE}/cmake/commonSettings.cmake)

# Append /bigobj to compiler flags on Windows for this target
if (MSVC)
   # FIXME: Add the other compiler flags from QuantLib-SWIG/Python/setup.py (/GR /FD /Zm250 /EHsc)?
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /bigobj")
   message(STATUS CMAKE_CXX_FLAGS "=" "${CMAKE_CXX_FLAGS}")

   foreach (cfg "DEBUG" "RELEASE" "MINSIZEREL" "RELWITHDEBINFO")
      foreach (flag "CXX" "C")
         set (CMAKE_${flag}_FLAGS_${cfg} "${CMAKE_${flag}_FLAGS_${cfg}} /bigobj") 
	 message(STATUS CMAKE_${flag}_FLAGS_${cfg} "=" "${CMAKE_${flag}_FLAGS_${cfg}}")
      endforeach ()
   endforeach ()
endif()

set(ORE_JAVA_LIB_NAME "QuantLibJava") # no extensions
get_library_name("QuantLib" QL_LIB_NAME)
configure_msvc_runtime()

include_directories(${ORE}/QuantLib)
include_directories(${PROJECT_SOURCE_DIR}/../SWIG)
include_directories(${PROJECT_SOURCE_DIR}/../../QuantLib-SWIG/SWIG)

find_package (Boost COMPONENTS serialization date_time regex filesystem system REQUIRED)
include_directories(${Boost_INCLUDE_DIRS})

# specify library search path (update this when we build ORE with cmake)
link_directories(${ORE}/build/QuantLib/ql)

# use C++11
set (CMAKE_CXX_STANDARD 11)

# run SWIG
find_package(SWIG REQUIRED)
find_package(Java REQUIRED)
find_package(JNI REQUIRED)
include(UseJava)
include(UseSWIG)
include_directories(${JNI_INCLUDE_DIRS})
include(${SWIG_USE_FILE})
set(CMAKE_SWIG_FLAGS "")

set_source_files_properties(${PROJECT_SOURCE_DIR}/../SWIG/quantlib.i PROPERTIES CPLUSPLUS ON)
set_source_files_properties(${PROJECT_SOURCE_DIR}/../SWIG/quantlib.i PROPERTIES SWIG_FLAGS "-includeall")
set(CMAKE_SWIG_FLAGS -package quantlib)
set(CMAKE_SWIG_OUTDIR "quantlib")

swig_add_library(${ORE_JAVA_LIB_NAME} TYPE SHARED LANGUAGE java SOURCES ${PROJECT_SOURCE_DIR}/../SWIG/quantlib.i)

swig_link_libraries(${ORE_JAVA_LIB_NAME} ${QL_LIB_NAME})
swig_link_libraries(${ORE_JAVA_LIB_NAME} ${Boost_LIBRARIES})

#add_dependencies(${ORE_JAVA_LIB_NAME} ${QLE_LIB_NAME})
#add_dependencies(${ORE_JAVA_LIB_NAME} ${ORED_LIB_NAME})
#add_dependencies(${ORE_JAVA_LIB_NAME} ${OREA_LIB_NAME})

add_custom_command(TARGET ${ORE_JAVA_LIB_NAME} POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E make_directory classes
    COMMAND "${Java_JAVAC_EXECUTABLE}" -d classes quantlib/*.java
    COMMAND "${Java_JAR_EXECUTABLE}" -cfM ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/QuantLibJava.jar -C classes .
)

